<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GIS on KevCaz Home Page</title><link>https://kevcaz.github.io/tags/gis/</link><description>Recent content in GIS on KevCaz Home Page</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; 2019 Kevin Cazelles.</copyright><lastBuildDate>Tue, 20 Nov 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://kevcaz.github.io/tags/gis/index.xml" rel="self" type="application/rss+xml"/><item><title>Find the Coordinate Reference System (CRS) you need</title><link>https://kevcaz.github.io/notes/r/findcrs/</link><pubDate>Tue, 20 Nov 2018 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/r/findcrs/</guid><description>For the manipulation of spatial objects and spatial analyses, I mainly use R, meaning that I use R packages that turn R into a powerful Geographic Information System (GIS). Before 2017, I was using sp, rgdal, rgeos for vector objects and raster for raster objects. Now I use a combination of sf (created to replace sp, rgoes and rgdal), raster and sf and mapview.
One of the most common manipulation is to convert coordinates (see sf::st_transform() in raster::projectRaster()).</description></item><item><title>Clip, but crop first!</title><link>https://kevcaz.github.io/notes/r/cropfirst/</link><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/r/cropfirst/</guid><description>I often clip raster in R, with sf and raster it is straightforward and efficient. That said, I&amp;rsquo;d like to mention one tip tip R users that clip should be aware of: cropping before clipping. It does significantly improve the performance, as shown in the R script below:
library(sf) library(raster) library(tidyverse) ## download Canada boundaries (level of the county) ont &amp;lt;- getData(&amp;quot;GADM&amp;quot;, country = &amp;quot;CAN&amp;quot;, level = 2) %&amp;gt;% st_as_sf %&amp;gt;% filter(NAME_1 == &amp;quot;Ontario&amp;quot;) ## Download elevation raster (NB resolution is coarse) can_elv &amp;lt;- getData(&amp;quot;alt&amp;quot;, country = &amp;quot;CAN&amp;quot;) R&amp;gt; system.</description></item><item><title>&#39;sf&#39; is fast</title><link>https://kevcaz.github.io/notes/r/sfisfast/</link><pubDate>Fri, 09 Nov 2018 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/r/sfisfast/</guid><description>sf have become the new standard to read, manipulate, write vector files in R. I recently had a 1.6GB shapefiles that I needed to open
$ du geodata/* 717M geodata/OHN_WATERBODY.dbf 4.0K geodata/OHN_WATERBODY.prj 1.6G geodata/OHN_WATERBODY.shp 11M geodata/OHN_WATERBODY.shx and I was wondering about how much time it would take for sf to open it, and it was pretty fast ðŸš€
R&amp;gt; system.time( +... wat_all &amp;lt;- st_read(&amp;quot;geodata/OHN_WATERBODY.shp&amp;quot;) +... ) Reading layer `OHN_WATERBODY&#39; from data source `/home/kevcaz/Github/Studies/streamFish/geodata/OHN_WATERBODY.</description></item><item><title>Something wrong with rgeos 0.4-1?</title><link>https://kevcaz.github.io/notes/r/rgeos/</link><pubDate>Wed, 07 Nov 2018 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/r/rgeos/</guid><description>The last update of rgeos (version 0.4-1) was released on October 19th, 2018 and with my current R set up:
R&amp;gt; sessionInfo() R version 3.5.1 (2018-07-02) Platform: x86_64-pc-linux-gnu (64-bit) Running under: Debian GNU/Linux buster/sid I got the following error:
checking geos_c.h presence and usability... yes checking geos: linking with libgeos_c... no /usr/bin/ld: cannot find -lgeos collect2: error: ld returned 1 exit status configure: Install failure: compilation and/or linkage problems. configure: error: initGEOS_r not found in libgeos_c.</description></item></channel></rss>